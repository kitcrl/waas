//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
////////////////////                              ////////////////////
////////////////////                              ////////////////////
////////////////////         DO NOT MODIFY        ////////////////////
////////////////////                              ////////////////////
////////////////////                              ////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
function zWebSocket()//object
{
  this.host;
  this.url;
  this.socket;
  this.port="7810";
  this.tmr;
  this.callback;
	this.mode;
}

function zWebSocket_init(zws,ip,port,callback)
{
	zws.callback = callback; 
	zWebSocket_setup(zws,ip, port);
	zWebSocket_connect(zws, 3000);
}

function zWebSocket_setup(zws,ip,port)
{
  var loc=location.href;
  var __url=new Array();
  var _uri=new Array();
  __url=loc.split("/");
  _uri=__url[2].split(":");

  if(ip==0) zws.host=_uri[0];
  else zws.host=ip;

  if(port==0) zws.port=_uri[1];
  else zws.port=port;

  zws.url="ws://"+zws.host+":"+zws.port;
  return zws;
}

function zWebSocket_connect(zws,delay)
{
  try
  {
    //여기까진 다시옴
		zws.socket=new WebSocket(zws.url);
    zws.socket.onopen=function()
    {
    }
    zws.socket.onmessage=function(msg)
    {
		  //console.log("1");//체크함
      zWebSocket_onread(zws,msg);
    }
    zws.socket.onclose=function()
    {
			//console.log("disconnected. It will reconnect websocket, after 4seconds");
			clearTimeout(zws.tmr);
      zws.tmr=setTimeout(zWebSocket_connect,delay,zws);			
		}
  }
  catch(exception){}
  return zws;
}


function zWebSocket_onread(zws,msg)
{
  zws.callback(msg.data, msg.data.length);

  /****
  if(zws.callback)
	{
    var rdr = new FileReader();
    var ab = new Array();
    rdr.onloadend = function()
    {
      if(msg.data.size >= 1)
      {
        zws.callback(rdr.result, msg.data.size);
      }
    };
    ab = rdr.readAsText(msg.data);
	}
  ****/
}

//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////

